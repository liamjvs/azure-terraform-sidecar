name: azure-terraform-sidecar-postdeployment
# For deployments post-deployment/initialisation of the pipeline

trigger: none

variables:
  - template: ../variables/ado-variables.yaml

stages:
- stage: plan
  displayName: Plan
  condition: succeeded()
  jobs:
  - job: tf_plan
    displayName: terraform plan
    pool: 
      name: ${{ variables.agent_pool_name }}
    steps:
      - template: templates/utils/cloud_init.yaml
      - checkout: self
        persistCredentials: true
        displayName: git checkout
      - template: templates/az/login.yaml
        parameters:
          managed_identity: true
          azure_subscription_id: ${{ variables.azure_subscription_id }}
      - template: templates/tf/init.yaml
        parameters:
          working_directory: "$(Build.SourcesDirectory)/terraform"
          backend_config: $(Build.SourcesDirectory)/variables/${{ variables.terraform_state_file }}
      - template: templates/tf/plan.yaml
        parameters:
          working_directory: "$(Build.SourcesDirectory)/terraform"
          terraform_vars:
            deployment_choice='System Agent Pool'
            authentication_method='System Managed Identity'
      - template: templates/az/logout.yaml
- stage: deployment
  displayName: Deploy
  dependsOn: plan
  condition: succeeded()
  pool: 
    name: ${{ variables.agent_pool_name }}
  jobs:
  - deployment: tf_apply
    displayName: terraform apply
    environment: "terraform"
    strategy:
      runOnce:
        deploy:
          steps:
            - template: templates/utils/cloud_init.yaml
            - checkout: self
              persistCredentials: true
              displayName: git checkout
            - task: DownloadBuildArtifacts@1
              displayName: "Download Artifact"
              inputs:
                buildType: "current"
                downloadType: "single"
                artifactName: "terraform_plan"
                downloadPath: "$(Build.SourcesDirectory)/terraform"
            - template: templates/az/login.yaml
              parameters:
                managed_identity: true
                azure_subscription_id: ${{ variables.azure_subscription_id }}
            - template: templates/tf/init.yaml
              parameters:
                working_directory: "$(Build.SourcesDirectory)/terraform"
                backend_config: $(Build.SourcesDirectory)/variables/${{ variables.terraform_state_file }}
            - template: templates/tf/apply.yaml
              parameters:
                working_directory: "$(Build.SourcesDirectory)/terraform"
            - template: templates/az/logout.yaml